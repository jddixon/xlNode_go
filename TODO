xlattice_go/node/TODO

2013-08-02
    * lfs is a path; it must be filtered accordingly
    * need peer.Parse() which converts a slice of strings back
        into a Peer object
        - first version of parser can be quite strict
        - eventually should be syntactically liberal when
            parsing (although strict when writing)

    * peer.Parse will require overlay.Parse()
    * and connector.Parse
    * need node.Strings(), node.String()
    * and node.Parse()
    * and from these node.Save() and node.Load()
        - if a node is started with only the name, id, and lfs 
            specified, it should load its configuration from say 
            LFS/.xlattice/config
        - LFS will conventionally be ./tmp/nodeID/ in testing, 
            where the nodeID is in hex

2013-07-30
    * p_test.go should be done over the wire, so to speak; that
        is, between two 127.0.0.1 endpoints
    * the protocol must be documented
    * add local file system = path to my private area on disk       # DONE
        for node 
        - need test of this capability
    * integrating gateways into node requires ability to create
        composite connections
        - Gateway extends Node
    * from 07-16: need peer_test.go
    * need UDP transport

2013-07-29
    * Adding a peer must add at least one connector
    * Need a simple protocol to allow nodes to talk to each other   # DONE
    * Change Peer, replacing list of connectors in NewPeer 
        parameters with list of endpoints (from which we determine 
        connectors)
    * Node.Close must close all open connections 
        - take care, servers may have MANY such connections
            * could put each Close() in separate goroutine
