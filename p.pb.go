// Code generated by protoc-gen-go.
// source: p.proto
// DO NOT EDIT!

package node

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type XLatticeMsg_Op int32

const (
	XLatticeMsg_Hello     XLatticeMsg_Op = 1
	XLatticeMsg_Bye       XLatticeMsg_Op = 2
	XLatticeMsg_KeepAlive XLatticeMsg_Op = 3
	XLatticeMsg_Ack       XLatticeMsg_Op = 4
	XLatticeMsg_Error     XLatticeMsg_Op = 5
	XLatticeMsg_Get       XLatticeMsg_Op = 6
	XLatticeMsg_Put       XLatticeMsg_Op = 7
	XLatticeMsg_IHave     XLatticeMsg_Op = 8
)

var XLatticeMsg_Op_name = map[int32]string{
	1: "Hello",
	2: "Bye",
	3: "KeepAlive",
	4: "Ack",
	5: "Error",
	6: "Get",
	7: "Put",
	8: "IHave",
}
var XLatticeMsg_Op_value = map[string]int32{
	"Hello":     1,
	"Bye":       2,
	"KeepAlive": 3,
	"Ack":       4,
	"Error":     5,
	"Get":       6,
	"Put":       7,
	"IHave":     8,
}

func (x XLatticeMsg_Op) Enum() *XLatticeMsg_Op {
	p := new(XLatticeMsg_Op)
	*p = x
	return p
}
func (x XLatticeMsg_Op) String() string {
	return proto.EnumName(XLatticeMsg_Op_name, int32(x))
}
func (x XLatticeMsg_Op) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *XLatticeMsg_Op) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(XLatticeMsg_Op_value, data, "XLatticeMsg_Op")
	if err != nil {
		return err
	}
	*x = XLatticeMsg_Op(value)
	return nil
}

type XLatticeMsg struct {
	SeqN             *uint64 `protobuf:"varint,1,opt,name=seqN" json:"seqN,omitempty"`
	Id               []byte  `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Salt             []byte  `protobuf:"bytes,3,opt,name=salt" json:"salt,omitempty"`
	Sig              []byte  `protobuf:"bytes,4,opt,name=sig" json:"sig,omitempty"`
	YourSeqN         *uint64 `protobuf:"varint,5,opt,name=yourSeqN" json:"yourSeqN,omitempty"`
	YourID           []byte  `protobuf:"bytes,6,opt,name=yourID" json:"yourID,omitempty"`
	ErrCode          *uint64 `protobuf:"varint,7,opt,name=errCode" json:"errCode,omitempty"`
	ErrDesc          *string `protobuf:"bytes,8,opt,name=errDesc" json:"errDesc,omitempty"`
	Hash             []byte  `protobuf:"bytes,9,opt,name=hash" json:"hash,omitempty"`
	Payload          []byte  `protobuf:"bytes,10,opt,name=payload" json:"payload,omitempty"`
	CommsKey         []byte  `protobuf:"bytes,11,opt,name=commsKey" json:"commsKey,omitempty"`
	SigKey           []byte  `protobuf:"bytes,12,opt,name=sigKey" json:"sigKey,omitempty"`
	MyEnd            *string `protobuf:"bytes,13,opt,name=myEnd" json:"myEnd,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *XLatticeMsg) Reset()         { *m = XLatticeMsg{} }
func (m *XLatticeMsg) String() string { return proto.CompactTextString(m) }
func (*XLatticeMsg) ProtoMessage()    {}

func (m *XLatticeMsg) GetSeqN() uint64 {
	if m != nil && m.SeqN != nil {
		return *m.SeqN
	}
	return 0
}

func (m *XLatticeMsg) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *XLatticeMsg) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *XLatticeMsg) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *XLatticeMsg) GetYourSeqN() uint64 {
	if m != nil && m.YourSeqN != nil {
		return *m.YourSeqN
	}
	return 0
}

func (m *XLatticeMsg) GetYourID() []byte {
	if m != nil {
		return m.YourID
	}
	return nil
}

func (m *XLatticeMsg) GetErrCode() uint64 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *XLatticeMsg) GetErrDesc() string {
	if m != nil && m.ErrDesc != nil {
		return *m.ErrDesc
	}
	return ""
}

func (m *XLatticeMsg) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *XLatticeMsg) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *XLatticeMsg) GetCommsKey() []byte {
	if m != nil {
		return m.CommsKey
	}
	return nil
}

func (m *XLatticeMsg) GetSigKey() []byte {
	if m != nil {
		return m.SigKey
	}
	return nil
}

func (m *XLatticeMsg) GetMyEnd() string {
	if m != nil && m.MyEnd != nil {
		return *m.MyEnd
	}
	return ""
}

func init() {
	proto.RegisterEnum("node.XLatticeMsg_Op", XLatticeMsg_Op_name, XLatticeMsg_Op_value)
}
